name: Create Release and Attach Binaries

on:
  push:
    tags:
      - 'V*.*'

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install PlatformIO and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Extract Board Names
      run: python extract_boards.py > boards.txt

    - id: set-matrix
      run: echo "::set-output name=matrix::$(jq -R -s -c 'split("\n")[:-1]' boards.txt)"

    - name: Find pio path
      run: which pio || echo "pio not found"
      id: find-pio

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: ${{fromJson(needs.prepare.outputs.matrix)}}
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Extract Tag Name
      id: get_tag
      run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

    - name: Install and setup GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh jq
        echo ${{ secrets.GH_PAT }} | gh auth login --with-token

    - name: Build for ${{ matrix.board }}
      run: |
        /opt/hostedtoolcache/Python/3.11.4/x64/bin/pio run -e ${{ matrix.board }}
        mkdir -p binaries/${{ matrix.board }}
        if [[ -f .pio/build/${{ matrix.board }}/firmware.bin ]]; then
          mv .pio/build/${{ matrix.board }}/firmware.bin binaries/${{ matrix.board }}/Bambulab_Esp32_LEDController_${{ matrix.board }}_${{ steps.get_tag.outputs.tag }}.bin
          mv .pio/build/${{ matrix.board }}/bootloader.bin binaries/${{ matrix.board }}/
          mv .pio/build/${{ matrix.board }}/partitions.bin binaries/${{ matrix.board }}/ 
        else
          echo "firmware.bin for ${{ matrix.board }} not found!"
          exit 1
        fi

    - name: Push binaries to repository
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"
        git add binaries/${{ matrix.board }}/*
        git commit -m "Add binaries for ${{ matrix.board }}"
        git push

    - name: Attach .bin file to Release
      run: |
        file=binaries/${{ matrix.board }}/Bambulab_Esp32_LEDController_${{ matrix.board }}_${{ steps.get_tag.outputs.tag }}.bin
        echo "Uploading $file to release..."
        if ! gh release upload ${{ steps.get_tag.outputs.tag }} $file; then
          echo "Failed to upload $file"
        fi
