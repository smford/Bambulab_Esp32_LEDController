name: Create Release and Attach Binaries

on:
  push:
    tags:
      - 'V*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Extract Board Names
      run: |
        python extract_boards.py > boards.txt

    - name: Extract Tag Name
      id: get_tag
      run: echo "::set-output name=tag::${GITHUB_REF#refs/tags/}"

    - name: Install GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh

    - name: Authenticate with GitHub CLI
      run: echo ${{ secrets.GH_PAT }} | gh auth login --with-token

    - name: Build Firmware and Rename .bin files
      run: |
        while IFS= read -r board; do
          pio run -e $board
          mv .pio/build/$board/firmware.bin .pio/build/Bambulab_Esp32_LEDController_${board}_${{ steps.get_tag.outputs.tag }}.bin
        done < boards.txt

    - name: List renamed .bin files
      run: ls -l .pio/build/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Auto-release for ${{ github.ref }}
        draft: true
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}

    - name: Attach .bin files to Release
      run: |
        while IFS= read -r board; do
          file=.pio/build/Bambulab_Esp32_LEDController_${board}_${{ steps.get_tag.outputs.tag }}.bin
          echo "Uploading $file to release..."
          if ! gh release upload ${{ steps.get_tag.outputs.tag }} $file; then
            echo "Failed to upload $file"
          fi
        done < boards.txt