name: Create Release and Attach Binaries

on:
  push:
    tags:
      - 'V*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: List root directory contents
      run: ls -l

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Extract Board Names
      run: python extract_boards.py
      id: extract_boards
      continue-on-error: false

    - name: Install GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh

    - name: Authenticate with GitHub CLI
      run: echo ${{ secrets.GH_PAT }} | gh auth login --with-token

    - name: Build Firmware and Rename .bin files
      run: |
        for board in ${{ steps.extract_boards.outputs.stdout }}; do
          pio run -e $board
          mv .build/$board/firmware.bin .build/firmware-$board-${{ github.ref }}.bin
        done

    - name: List .build directory contents
      run: ls -l .build/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: Auto-release for ${{ github.ref }}
        draft: true
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}

    - name: Attach .bin files to Release
      run: |
        for board in ${{ steps.extract_boards.outputs.stdout }}; do
          file=.build/firmware-$board-${{ github.ref }}.bin
          echo "Uploading $file to release..."
          if ! gh release upload ${{ github.ref }} $file; then
            echo "Failed to upload $file"
          fi
        done
